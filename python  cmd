 Why to Use Python?

 Python can be used for :
 1. Programming (for Placements/online contests/DSA)
 2. Development (using a backend framework called Django)
 3. Machine Learning / Data Science / Artificial Intelligence
 Websites built using Python include Google, Youtube, Instagram, Netflix, Uber & much
 more.

 What to Install?
 1. Python (https://www.python.org/)
 2. PyScripter (https://rb.gy/bvnn69 )
 3. PyCharm (https://www.jetbrains.com/pycharm/)
 Our First Python Program
 print("Hello World")
 AKeyPoint to know about Python
 It is a case sensitive language


 Variables
 Basic Types in Python- numbers(integers, floating), boolean, strings

 Example 1 :
 name = "azhar"
 age = 22
 print(name)
 print(age)

 Example 2 :
 name = "azhar"
 age = 22
 name="kittu"
 age=24
 print(name)
 print(age)

 Example3:
 first_name="azharuddin"
 last_name="ansari"
 age=19
 is_adult=True
 print(first_name+""+last_name)
 print(age)
 print(is_adult)

 >ExerciseSolution
 first_name="Tony"
 last_name="Stark"
 age=52
 is_genius=True
 TakingInput
 name=input("Whatisyourname?")
 print("Hello"+name)
 print("WelcometoourcoolPythonclass")

 >ExerciseSolution
 superhero=input("Whatisyoursuperheroname?")
 print(superhero)

 TypeConversion
 old_age=input("Enteryourage:")
 #new_age=old_age+2
 #print(new_age)
 new_age=int(old_age)+2
 print(new_age)
 #Usefulconverionfunctions
 #1.float()
 #2.bool()
 #3.str()
 #4.int()

 >CodeforSumof2Numbers
 first_number=input("Enter1stnumber:")
 second_number=input("Enter2ndnumber:")
 sum=float(first_number)+float(second_number)
 print("thesumis:"+str(sum))
 Strings
 name="TonyStark"
 print(name.upper())
 print(name)
 print(name.lower())
 print(name)
 print(name.find('y'))
 print(name.find('Y'))
 print(name.find("Stark"))
 print(name.find("stark"))
 print(name.replace("TonyStark","Ironman"))
 print(name)

 #tocheckifacharacter/stringispartofthemainstring
 print("Stark"inname)
 print("S"inname)
 print("s"inname)

 ArithmeticOperators
 print(5+2)
 print(5-2)
 print(5*2)
 print(5/2)
 print(5//2)
 print(5%2)
 print(5**2)
 i=5
 i=i+2
 i+=2
 i-=2
 i*=2


 Operator Precedence
 result = 3 + 5 * 2 # 16 or 13 ?
 print(result)


``````````````````````````````````````````````````````````````````````````````````````````````````````````````
Operators	                                             |         Meaning
``````````````````````````````````````````````````````````````````````````````````````````````````````````````

()	                                                   |         Parentheses
**	                                                   |         Exponent
+x, -x, ~x	                                           |         Unary plus, Unary minus, Bitwise NOT
*, /, //, %	                                           |         Multiplication, Division, Floor division, Modulus
+, -	                                                 |         Addition, Subtraction
<<, >>	                                               |         Bitwise shift operators
&	                                                     |         Bitwise AND
^	                                                     |         Bitwise XOR
|	                                                     |         Bitwise OR
==, !=, >, >=, <, <=, is, is not, in, not in	         |         Comparisons, Identity, Membership operators
not	                                                   |         Logical NOT
and	                                                   |         Logical AND
or	                                                   |         Logical OR

``````````````````````````````````````````````````````````````````````````````````````````````````````````````
 Comments
 # This is a comment & useful for people reading your code
 # This is another line


 Comparison Operators
 is_greater=1>5
 is_lesser=1<5
 #1<=5
 #1>=5
 is_not_equal=1!=5
 is_equal=1==5
 LogicalOperators
 #or->(atleastoneistrue)
 #and->(botharetrue)
 #not->(reversesanyvalue)
 number=2
 print(number>3)
 print(number<3)
 print(notnumber>3)
 print(notnumber<3)
 print(number>3andnumber>1)
 print(number>3ornumber>1)

 Ifstatements
 age=13
 ifage>=18:
 print("youareanadult")
 print("youcanvote")
 elifage<3:
 print("youareachild")
 else:
 print("youareinschool")
 print("thankyou")
   
 Letâ€™sbuildaCalculator
 #OurCalculator
 first=input("Enterfirstnumber:")
 second=input("Entersecondnumber:")
 first=int(first)
second=int(second)
 print("----presskeysforoperator(+,-,*,/,%)----------")
 operator=input("Enteroperator:")
 ifoperator=="+":
 print(first+second)
 elifoperator=="-":
 print(first-second)
 elifoperator=="*":
 print(first*second)
 elifoperator=="/":
 print(first/second)
 elifoperator=="%":
 print(first%second)
 else:
 print("InvalidOperation")
   
 RangeinPython
 range()functionreturnsarangeobjectthatisasequenceofnumbers.
 numbers=range(5)
 print(numbers)
 Foriteration(seeForLoopsection)
   
 WhileLoop
 i=1
 while(i<=5):
 print(i)
 i=i+1
 i=1
 while(i<=5):
 print(i*"*")
 i=i+1
 i=5
 while(i>=1):
 print(i*"*")
 i=i-1
 ForLoop(toiterateoveralist)
 foriinrange(5):
 print(i)
i=i+1
 foriinrange(5):
 print(i*"*")
 i=i+1

 Lists
 ListisacomplextypeinPython.
 friends=["amar","akbar","anthony"]
 print(friends[0])
 print(friends[1])
 print(friends[-1])
 print(friends[-2])
 friends[0]="aman"
 print(friends)
 print(friends[0:2])#returnsanewlist
 forfriendinfriends:
 print(friend)
 ListMethods:
 marks=["english",95,"chemistry",98]
 marks.append("physics")
 marks.append(97)
 print(marks)
 marks.insert(0,"math")
 marks.insert(1,99)
 print(marks)
 print("math"inmarks)
 print(len(marks)/2)
 marks.clear()
 print(marks)
 i=0
 whilei<len(marks):
 print(marks[i])
 print(marks[i+1])
 i=i+2

 Break&Continue
 students=["ram","shyam","kishan","radha","radhika"]
for student in students:
 if(student == "radha"):
 break
 print(student)
 for student in students:
 if(student == "kishan"):
 continue
 print(student)
  
 Tuples
 They are like lists (sequence of objects) but they are immutable i.e. once they have been
 defined we cannot change them.
 Parenthesis in tuples are optional.
 marks = (95, 98, 97, 97)
 #marks[0] = 98
 print(marks.count(97))
 print(marks.index(97))
 
 Sets
 Sets are a collection of all unique elements.
 Indexing is not supported in sets.
 marks = {98, 97, 95, 95}
 print(marks)
 for score in marks:
 print(score)
  
 Dictionary
 Dictionary is an unordered collection of Items. Dictionary stores a (key, value) pair.
 marks = {"math" : 99, "chemistry" : 98, "physics" : 97}
 print(marks)
 print(marks["chemistry"])
 marks["english"] = 95
 print(marks)
 marks["math"] = 96
 print(marks)
  
 Functions in Python
Function is a piece of code that performs some task. (In a tv remote, each button
 performs a functions, so a function is like that button in code)
 There are 3 types of functions in Java :
 a. In-built functions
 # int() str() float() min() range() max()
 b. Module functions
 Module is a file that contains some functions & variables which can be imported
 for use in other files.
 Each module should contain some related tasks
 Example : math, random, string
 import math
 print(dir(math))
 import random
 print(dir(random))
 import string
 print(dir(string))
 from math import sqrt
 print(sqrt(4))
 c. User-defined functions
 def sum(a, b=4):
 print(a + b)
 sum(1, 2)
 sum(1)
